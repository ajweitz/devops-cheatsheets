# Pod is the most basic object, it defines what container you want to run.
# Usually you wouldn't use it but rather define a "Deployment" object that has more options.

kind: Pod
apiVersion: v1
metadata:
  name: somepod
  labels:
    a: someValue
    b: anotherValue

spec:
  containers:
    - name: somename
      image: nginx
      # defining resource limits 
      resources:
        limits:
          cpu: "500m" # this is 0.5 CPU. 1 CPU unit equals to: 1 AWS vCPU/1 GCP Core/1 Azure vCore
          memory: "256Mi"
      # exposing a port    
      ports:
        - containerPort: 80

      ## OPTIONAL  

      # overriding ENTRYPOINT and CMD  
      command: ["sleep"] # corresponds to ENTRYPOINT in docker
      args: ["10"] # corresponds to CMD in docker
      
      # setting environment variables
      env:
        - name: MY_ENV_VAR
          value: some value
          # setting a single env var from a configMap
        - name: VAR_FROM_CONFIG_MAP
          valueFrom:
            configMapKeyRef:
              name: someconfigmap # name of the config map
              key: SOME_VAR # name of the env var we want to use
      # setting multiple environment variables from a ConfigMap
      envFrom:
        - configMapRef:
            name: someconfigmap # name of configmap. This will create the env vars "SOME_VAR" & "ANOTHER_VAR", as specified in the f-configmap-examply.yml
      
      volumes:
      # attaching configMap to a volume (to be used as file)
      - name: volumeForAppConfig
        configMap:
          name: someconfigmap
            